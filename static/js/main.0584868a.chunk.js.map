{"version":3,"sources":["utils/API.js","components/body/Body.js","components/EmployeeList/EmployeeList.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","Body","props","Table","striped","bordered","hover","employees","map","login","picture","registered","name","email","phone","src","medium","alt","age","first","last","uuid","EmployeeList","state","sortState","search","searchByTarget","event","setState","target","value","filter","emp","toLowerCase","includes","loadEmployees","API","then","res","data","results","catch","err","console","log","this","sortedArray","sort","a","b","aName","bName","comparison","Jumbotron","type","placeholder","onChange","onClick","sortByFirst","bind","sortByLast","Component","App","Container","Row","Col","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0584868a.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst QUERYURL = \"https://randomuser.me/api/?results=25\"\r\n\r\nexport default {\r\n    getEmployees: function() {\r\n        return axios.get(QUERYURL);\r\n    }\r\n};","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport \"./style.css\";\r\nfunction Body(props) {\r\n  \r\n  return (\r\n      <Table striped bordered hover>\r\n         <thead>\r\n            <tr>\r\n              <th>Employee</th>\r\n              <th>Years with Company</th>\r\n              <th>\r\n                  First Name\r\n              </th>\r\n              <th>Last Name</th>\r\n              <th>Email</th>\r\n              <th>Phone Number</th>\r\n            </tr>\r\n          </thead>\r\n        <tbody>\r\n          {props.employees.map(\r\n            ({  login, picture, registered, name, email, phone }) => {\r\n              return (\r\n                \r\n                <tr key={login.uuid}>\r\n                  <td>\r\n                    <img src={picture.medium} alt=\"IdPicture\" />\r\n                  </td>\r\n                  <td>{registered.age}</td>\r\n                  <td>{name.first}</td>\r\n                  <td>{name.last}</td>\r\n                  <td>{email}</td>\r\n                  <td>{phone}</td>\r\n                </tr>\r\n              );\r\n            }\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","import React, { Component } from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport \"./style.css\";\r\nimport Body from \"../body/Body\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\n\r\nclass EmployeeList extends Component {\r\n  state = {\r\n    employees: [],\r\n    sortState: [],\r\n    search: \"\",\r\n  };\r\n  componentDidMount() {\r\n    this.loadEmployees();\r\n  }\r\n\r\n  searchByTarget = (event) => {\r\n    this.setState({ search: event.target.value }, () => {\r\n      this.setState({\r\n        sortState: this.state.employees.filter((emp) =>\r\n          emp.name.first.toLowerCase().includes(this.state.search.toLowerCase())\r\n        ),\r\n      });\r\n    });\r\n  };\r\n\r\n  loadEmployees = () => {\r\n    API.getEmployees()\r\n      .then((res) =>\r\n        this.setState({\r\n          employees: res.data.results,\r\n          sortState: res.data.results,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  sortByFirst() {\r\n    function compare(a, b) {\r\n      const aName = a.name.first.toLowerCase();\r\n      const bName = b.name.first.toLowerCase();\r\n\r\n      let comparison = 0;\r\n      if (aName > bName) {\r\n        comparison = 1;\r\n      } else if (aName < bName) {\r\n        comparison = -1;\r\n      }\r\n\r\n      return comparison;\r\n    }\r\n\r\n    let sortedArray = this.state.sortState.sort(compare);\r\n    this.setState({ sortState: sortedArray });\r\n  }\r\n\r\n  sortByLast() {\r\n    function compare(a, b) {\r\n      const aName = a.name.first.toLowerCase();\r\n      const bName = b.name.first.toLowerCase();\r\n\r\n      let comparison = 0;\r\n      if (aName < bName) {\r\n        comparison = 1;\r\n      } else if (aName > bName) {\r\n        comparison = -1;\r\n      }\r\n\r\n      return comparison;\r\n    }\r\n\r\n    let sortedArray = this.state.sortState.sort(compare);\r\n    this.setState({ sortState: sortedArray });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Jumbotron>\r\n          <h1>Employee Directory</h1>\r\n        </Jumbotron>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.search}\r\n          placeholder=\"Search By First Name\"\r\n          onChange={this.searchByTarget}\r\n        ></input>\r\n        <button onClick={this.sortByFirst.bind(this)}>\r\n          First Name Alphabetical\r\n        </button>\r\n        <button onClick={this.sortByLast.bind(this)}>\r\n          First Name Non Alphabetical\r\n        </button>\r\n        <Body employees={this.state.sortState} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeeList;\r\n","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport EmployeeList from \"./components/EmployeeList/EmployeeList\";\nimport './App.css';\n\n\nfunction App() {\n  return (\n<div>\n      <Container>   \n      <Row>\n      <Col><EmployeeList /></Col>       \n      </Row>\n      </Container>  \n</div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}